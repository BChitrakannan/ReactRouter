{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/MPA/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const quoteID = params;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const {\n    sendRequest,\n    status,\n    data: loadedComment\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [quoteID, sendRequest]);\n\n  const addedCommentHandler = () => {//sendRequest(params.quoteID);\n  };\n\n  if (status === \"pending\") return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteID: quoteID,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Comments, \"UFJ/LEhulWgqs4PVsZdIBbTh1FI=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/MPA/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","Comments","isAddingComment","setIsAddingComment","params","quoteID","startAddCommentHandler","sendRequest","status","data","loadedComment","addedCommentHandler","comments"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMS,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,OAAO,GAAGD,MAAhB;;AACA,QAAME,sBAAsB,GAAG,MAAM;AACnCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAM;AAAEI,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC;AAA7B,MAA+CX,OAAO,CAACC,cAAD,CAA5D;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW,CAACF,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,EAAUE,WAAV,CAFM,CAAT;;AAGA,QAAMI,mBAAmB,GAAG,MAAM,CAChC;AACD,GAFD;;AAGA,MAAIH,MAAM,KAAK,SAAf,EACE,oBACE;AAAS,IAAA,SAAS,EAAEX,OAAO,CAACe,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEI,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGJ,eAAe,iBACd,QAAC,cAAD;AACE,MAAA,OAAO,EAAEG,OADX;AAEE,MAAA,cAAc,EAAEM;AAFlB;AAAA;AAAA;AAAA;AAAA,YARJ,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CAjCD;;GAAMV,Q;UAEWL,S,EAKsCG,O;;;KAPjDE,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const quoteID = params;\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const { sendRequest, status, data: loadedComment } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [quoteID, sendRequest]);\n  const addedCommentHandler = () => {\n    //sendRequest(params.quoteID);\n  };\n  if (status === \"pending\")\n    return (\n      <section className={classes.comments}>\n        <h2>User Comments</h2>\n        {!isAddingComment && (\n          <button className=\"btn\" onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n        )}\n        {isAddingComment && (\n          <NewCommentForm\n            quoteID={quoteID}\n            onAddedComment={addedCommentHandler}\n          />\n        )}\n        <p>Comments...</p>\n      </section>\n    );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}