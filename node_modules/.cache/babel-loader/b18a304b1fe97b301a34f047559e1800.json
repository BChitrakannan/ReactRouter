{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/MPA/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Chitrakannan\",\n  text: \"Learning React is fun\"\n}, {\n  id: \"q2\",\n  author: \"Dhruva\",\n  text: \"Learning React is not fun\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: loadedData,\n    error\n  } = useHttp(getSingleQuote);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteID);\n  console.log(match);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"0+MU4zMIjCz90+vMbpV2RD/p5d8=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/MPA/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","match","sendRequest","status","data","loadedData","error","quote","find","quoteID","console","log","path","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,cAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,QAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,CAArB;;AAYA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAMc,KAAK,GAAGX,aAAa,EAA3B;AACA,QAAM;AACJY,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,UAHF;AAIJC,IAAAA;AAJI,MAKFb,OAAO,CAACC,cAAD,CALX;AAOA,QAAMa,KAAK,GAAGZ,YAAY,CAACa,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaI,MAAM,CAACS,OAAjD,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AACA,MAAI,CAACM,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACT,IAA9B;AAAoC,MAAA,MAAM,EAAES,KAAK,CAACV;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEI,KAAK,CAACW,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BD;;GAAMb,W;UACWZ,S,EACDG,a,EAMVG,O;;;KARAM,W;AAgCN,eAAeA,WAAf","sourcesContent":["import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Chitrakannan\",\n    text: \"Learning React is fun\",\n  },\n  {\n    id: \"q2\",\n    author: \"Dhruva\",\n    text: \"Learning React is not fun\",\n  },\n];\nconst QuoteDetail = () => {\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: loadedData,\n    error,\n  } = useHttp(getSingleQuote);\n\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteID);\n  console.log(match);\n  if (!quote) {\n    return <p> No Quote Found</p>;\n  }\n  return (\n    <section>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments></Comments>\n      </Route>\n    </section>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}