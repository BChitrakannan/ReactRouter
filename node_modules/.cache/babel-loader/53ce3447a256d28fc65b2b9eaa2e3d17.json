{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/MPA/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteID\n  } = params;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const {\n    sendRequest,\n    status,\n    data: loadedComment\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [quoteID, sendRequest]);\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  }, []);\n  let comments;\n\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === \"completed\" && loadedComment && loadedComment.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedComment || loadedComment.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \" No comments have been added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteID: quoteID,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"kV2b1ArwfYtBSs3MVssad+lynFw=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/MPA/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"names":["useCallback","useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteID","startAddCommentHandler","sendRequest","status","data","loadedComment","addedCommentHandler","comments","length"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcD,MAApB;;AACA,QAAME,sBAAsB,GAAG,MAAM;AACnCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAM;AAAEI,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC;AAA7B,MAA+Cb,OAAO,CAACC,cAAD,CAA5D;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAACF,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,EAAUE,WAAV,CAFM,CAAT;AAIA,QAAMI,mBAAmB,GAAGpB,WAAW,CAAC,MAAM;AAC5CgB,IAAAA,WAAW,CAACF,OAAD,CAAX;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,MAAIO,QAAJ;;AACA,MAAIJ,MAAM,KAAK,SAAf,EAA0B;AACxBI,IAAAA,QAAQ,gBACN;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIJ,MAAM,KAAK,WAAX,IAA0BE,aAA1B,IAA2CA,aAAa,CAACG,MAAd,GAAuB,CAAtE,EAAyE;AACvED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,MACEF,MAAM,KAAK,WAAX,KACC,CAACE,aAAD,IAAkBA,aAAa,CAACG,MAAd,KAAyB,CAD5C,CADF,EAGE;AACAD,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEI,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGJ,eAAe,iBACd,QAAC,cAAD;AACE,MAAA,OAAO,EAAEG,OADX;AAEE,MAAA,cAAc,EAAEM;AAFlB;AAAA;AAAA;AAAA;AAAA,YARJ,EAaGC,QAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtDD;;GAAMX,Q;UAEWP,S,EAKsCG,O;;;KAPjDI,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteID } = params;\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const { sendRequest, status, data: loadedComment } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [quoteID, sendRequest]);\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  }, []);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComment && loadedComment.length > 0) {\n    comments = <CommentsList comments={loadedComment}></CommentsList>;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComment || loadedComment.length === 0)\n  ) {\n    comments = <p className=\"centered\"> No comments have been added</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteID={quoteID}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}